<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
         version="2.4">

    <display-name>wicket</display-name>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value><![CDATA[
            classpath:applicationContext-database.xml
            classpath:applicationContext-wicket.xml
       ]]></param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <filter>
        <filter-name>JpaFilter</filter-name>
        <filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>JpaFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--
           There are three means to configure Wickets configuration mode and they are
           tested in the order given.
           1) A system property: -Dwicket.configuration
           2) servlet specific <init-param>
           3) context specific <context-param>
           The value might be either "development" (reloading when templates change)
           or "deployment". If no configuration is found, "development" is the default.
     -->

    <filter>
        <filter-name>wicket.wicket</filter-name>
        <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
        <init-param>
            <param-name>applicationClassName</param-name>
            <param-value>com.bekk.wa.webframework.WicketApplication</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>wicket.wicket</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


</web-app>
